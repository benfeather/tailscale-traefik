services:
  tailscale:
    image: tailscale/tailscale:latest
    container_name: tailscale
    network_mode: host
    env_file:
      - .env
    environment:
      - TS_AUTH_ONCE=true
      - TS_HOSTNAME=homelab
      - TS_STATE_DIR=/var/lib/tailscale
    volumes:
      - /dev/net/tun:/dev/net/tun
      - ./config/tailscale:/var/lib/tailscale
    cap_add:
      - net_admin
      - sys_module

  traefik:
    image: traefik:latest
    container_name: traefik
    network_mode: host
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/letsencrypt:/etc/letsencrypt:ro
      - ./config/traefik:/etc/traefik
    depends_on:
      - tailscale
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.services.traefik.loadbalancer.server.port=8080

  whoami:
    image: traefik/whoami:latest
    container_name: whoami
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)
      - traefik.http.routers.whoami.entrypoints=websecure
      - traefik.http.routers.whoami.tls=true

  certbot:
    image: serversideup/certbot-dns-cloudflare:latest
    container_name: certbot
    env_file:
      - .env
    environment:
      CERTBOT_DOMAINS: "${DOMAIN}"
      CERTBOT_EMAIL: "${EMAIL}"
      CLOUDFLARE_API_TOKEN: "${CF_API_TOKEN}"
    volumes:
      - ./config/letsencrypt:/etc/letsencrypt
