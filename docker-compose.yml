services:
  cf-tunnel:
    image: cloudflare/cloudflared:latest
    container_name: cf-tunnel
    restart: unless-stopped
    networks:
      - proxy_network
    env_file: 
      - .env
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      - ./config/cloudflared/config.yml:/etc/cloudflared/config.yml:ro
    command: tunnel --no-autoupdate --config /etc/cloudflared/config.yml run
    depends_on:
      - traefik

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    env_file:
      - .env
    networks:
      - proxy_network
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./config/traefik/acme.json:/etc/traefik/acme.json
      - ./config/traefik/logs:/var/log/traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik-dashboard.rule=Host(`dashboard.${DOMAIN}`)
      - traefik.http.routers.traefik-dashboard.service=api@internal
      - traefik.http.routers.traefik-dashboard.entrypoints=websecure
      - traefik.http.routers.traefik-dashboard.tls.certresolver=cloudflare
      - traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080
 
  whoami:
    image: traefik/whoami:latest
    container_name: whoami
    restart: unless-stopped
    env_file: 
      - .env
    networks:
      - proxy_network
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)
 
networks:
  proxy_network:
    name: proxy_network
    driver: bridge